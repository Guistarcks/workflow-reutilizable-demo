name: Test-build-sonar
on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: true
        type: string

    secrets:
      
      SONAR_TOKEN:
        description: 'Sonar token'
        required: true
        
jobs:
  test-unitarios:
    if: github.base_ref == 'develop' || startsWith(github.ref, 'refs/heads/feature/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        id: run-tests
        run: npm test -- --coverage --watchAll=false
        continue-on-error: true
        timeout-minutes: 5

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'coverage-reports'
          path: 'coverage/'
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'test-results'
          path: 'coverage/lcov.info'
          retention-days: 30

      - name: Create test summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f "coverage/lcov.info" ]; then
            echo "✅ Tests completed with coverage report" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Tests completed without coverage report" >> $GITHUB_STEP_SUMMARY
          fi

  Test-Sonar:
    needs: test-unitarios
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: 'coverage-reports'
          path: 'coverage/'

      - name: Configurar Node.js 🔧
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'

      - name: Instalar dependencias Node.js
        run: npm ci

      - name: Configurar Java 17 para SonarQube ☕
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
        
      - name: Ejecutar análisis de calidad con SonarQube 🧪
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=${{ vars.PROJECT_KEY }} \
            -Dsonar.projectName=${{ vars.PROJECT_NAME }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.exclusions=**/*.java \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.coverage.exclusions=**/*.test.js,**/*.spec.js,**/node_modules/**
       
  build:
      if: github.base_ref == 'develop'
      runs-on: ubuntu-latest
      needs: Test-Sonar
     
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: ${{ inputs.node-version }}
            cache: 'npm'
  
        - name: Install dependencies
          run: npm ci
  
        - name: Build project
          id: run-build
          run: npm run build || echo "No build script found, skipping build step"
          continue-on-error: true
      
        - name: Upload artifacts
          id: upload
          uses: actions/upload-artifact@v4
          with:
            name: 'node-app-artifacts'
            path: '.'
            retention-days: 7

  deploy-pre:
    if: github.base_ref == 'develop'
    needs: build
    uses: ./.github/workflows/action/action-deploy-pre.yml
    with:
      environment: 'pre-production'
      artifact-name: 'node-app-artifacts'
      deploy-path: './dist'